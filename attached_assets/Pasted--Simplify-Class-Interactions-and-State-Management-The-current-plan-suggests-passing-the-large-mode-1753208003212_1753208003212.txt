. Simplify Class Interactions and State Management

The current plan suggests passing the large models and data dictionaries into the __init__ constructor of each class. A slightly cleaner, more "Streamlit-native" approach is to have app.py act as the primary orchestrator that holds the data and passes only what's needed to the methods, not the constructors.

Before: matcher = ResearcherMatcher(models, data)

Recommended: matcher = ResearcherMatcher() and then results = matcher.search_researchers(solicitation_obj, models, data)

Why? This makes your utility classes (ResearcherMatcher, TeamBuilder) stateless and more reusable. The main app.py is the single source of truth for the application's state, which is a best practice in Streamlit.

2. Streamline the ReportGenerator Method Signature

The proposed signature for generate_full_report is very long and has many parameters. This can be simplified.

Before:

Python

def generate_full_report(self, affinity_df, team_indices, selection_history, matching_results, ...)
Recommended: Create a new dataclass in data_models.py to bundle the team assembly results.

Python

# In data_models.py
@dataclass
class TeamAssemblyResult:
    affinity_df: pd.DataFrame
    team_indices: List[int]
    selection_history: List[Dict]

# In report_generator.py
def generate_full_report(self, matching_results: MatchingResults, team_results: TeamAssemblyResult, ...)
Why? This makes the method signature much cleaner, reduces the chance of passing parameters in the wrong order, and makes the code more readable and self-documenting.

3. Formalize the Solicitation Object

Your Colab code creates a SolicitationObj on the fly. It's better to formalize this in your data models.

Recommendation: Add a Solicitation dataclass in data_models.py.

Python

# In data_models.py
@dataclass
class Solicitation:
    title: str
    abstract: str
    required_skills_checklist: List[str]
    eligibility: Optional[Dict] = None
    # Add other fields as needed
Why? This provides type safety and makes it explicit what data a solicitation is expected to contain.